{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/description/description.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/description/description.component.css","webpack:///./src/app/description/description.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  <h1>\\n    New Task\\n  </h1>\\n  <form (submit)=\\\"onSubmit()\\\">\\n    <!-- use the json pipe to see how newTask changes in real time -->\\n    <p> {{ newTask | json }} </p>\\n    <input type=\\\"text\\\" name=\\\"newTask.title\\\" [(ngModel)]=\\\"newTask.title\\\" />\\n    <input type=\\\"text\\\" name=\\\"newTask.description\\\" [(ngModel)]=\\\"newTask.description\\\" />\\n    <input type=\\\"submit\\\" value=\\\"Create Task\\\" />\\n  </form>\\n  <div *ngIf=\\\"toggleEditBool == true\\\">\\n    <form  (submit)=\\\"onEdit()\\\">\\n        <h2>Edit Task</h2>\\n        <!-- use the json pipe to see how newTask changes in real time -->\\n        <p> {{ editTask | json }} </p>\\n        <input type=\\\"text\\\" name=\\\"editTask.title\\\" [(ngModel)]=\\\"editTask.title\\\" value=\\\"{{editTask.title}}\\\" />\\n        <input type=\\\"text\\\" name=\\\"editTask.description\\\" [(ngModel)]=\\\"editTask.description\\\" value=\\\"{{editTask.description}}\\\" />\\n        <input type=\\\"submit\\\" value=\\\"Edit Task\\\" />\\n    </form>\\n  </div>\\n  <!-- <button (click)=\\\"thismessage()\\\">show movie</button> -->\\n</div>\\n<h1>task List</h1>\\n<ul *ngFor=\\\"let m of movies ;let i =index\\\">\\n  <li>\\n    <div style=\\\"height: 200px; width: 200px; border: solid 1px black\\\">\\n      <h2>{{m.title}}</h2>\\n      <h2>{{m.description}}</h2>\\n      <h2>{{m._id}}</h2>\\n      <!-- <button (click)=\\\"let show = !show\\\">edit</button> -->\\n      <button (click)=\\\"onDelete(m._id)\\\">delete</button>\\n      <button (click)=\\\"toggleEdit(i)\\\">edit</button>\\n      <button (click)=\\\"toggleAppDescription(m.description)\\\">show des</button>\\n    </div>\\n  </li>\\n</ul>\\n<app-description *ngIf=\\\"passDescription\\\" [appDesDescription]=\\\"passDescription\\\"></app-description>\\n\\n\\n<router-outlet></router-outlet>\"","module.exports = \"<div style=\\\"border: solid 1px black\\\">\\n  <p>{{appDesDescription}}</p>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit  } from '@angular/core';\nimport { HttpService } from './http.service';\n\n\n// @Component({\n//   selector: 'app-root',\n//   templateUrl: './app.component.html',\n//   styleUrls: ['./app.component.css']\n// })\n// export class AppComponent {\n//   title = 'app';\n//    \n// }\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit{\n  movies: any;\n  dis: string;\n  newTask: any;\n  editTask: any;\n  toggleEditBool: boolean;\n  passDescription: string;\n\n  constructor(private _httpService: HttpService){}\n\n  ngOnInit() {\n    this.Movie();\n    this.newTask = { title: \"\", description: \"\" };\n    this.editTask = { title: \"\", description: \"\" };\n    this.toggleEditBool = false;\n  }\n\n  description(i: number): void {\n    this.dis = this.movies[i].description;\n    console.log ( this.dis);\n  }\n\n  toggleEdit(i : number): void{\n    this.toggleEditBool = true;\n    this.editTask.title = this.movies[i].title;\n    this.editTask.description = this.movies[i].description;\n  }\n\n\n  Movie() {\n    let tempObservable = this._httpService.getIndex();\n    tempObservable.subscribe(data => {\n      console.log(\"got our data!\", data);\n      this.movies = data;\n    });\n  }\n\n  toggleAppDescription(d : string): void {\n    this.passDescription = d;\n    console.log(this.passDescription)\n  }\n\n  onSubmit() {\n    let observable = this._httpService.postIndex(this.newTask);\n    observable.subscribe(data => {\n      console.log(\"got our data!\", data);\n      this.newTask = { title: \"\", description: \"\" }\n    });\n    this.Movie();\n  }\n\n  onDelete(i: number) {\n    console.log(i);\n    let observable = this._httpService.deleteIndex(i);\n    observable.subscribe(data => {\n      console.log(\"got our data!\", data);\n    });\n    this.Movie();\n  }\n\n\n\n  onEdit(): void {\n    let observable = this._httpService.updateIndex(this.editTask);\n    observable.subscribe(data => {\n      console.log(\"got our data!\", data);\n      this.editTask = { title: \"\", description: \"\" }\n    });\n    this.toggleEditBool = false;\n  }\n\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpService } from './http.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { DescriptionComponent } from './description/description.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DescriptionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rlc2NyaXB0aW9uL2Rlc2NyaXB0aW9uLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-description',\n  templateUrl: './description.component.html',\n  styleUrls: ['./description.component.css']\n})\nexport class DescriptionComponent implements OnInit {\n  @Input() appDesDescription: any;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n\n  constructor(private _http: HttpClient){\n  }\n\n  getTasks(){\n    let tempObservable = this._http.get('/task');\n    tempObservable.subscribe(data => console.log(\"Got our tasks!\", data));\n  }\n\n  getIndex(){\n    return this._http.get('/movie');\n  }\n\n  postIndex(newtask){\n    return this._http.post(\"/create\", newtask);\n  }\n\n  updateIndex(edittask){\n    return this._http.put(\"/update\", edittask);\n  }\n\n  deleteIndex(index){\n    return this._http.delete(`/delete/${index}`);\n  }\n\n  // getPokemon(){\n  //   let mew = this._http.get('https://pokeapi.co/api/v2/pokemon/mew/');\n  //   mew.subscribe(data => {\n  //     console.log(\"mew weight:\", data.weight)\n  //     var typeURL = data.types[0].type.url;\n  //     var abilitiesURL = data.abilities[0].ability.url\n      \n  //     let typethis = this._http.get(typeURL);\n  //     typethis.subscribe(data1 => {\n  //       console.log(data1);\n  //     });\n      \n  //     let pokemon = this._http.get(abilitiesURL);\n  //     pokemon.subscribe(data => {\n  //       console.log(`There are ${data[\"pokemon\"].length} pokemon has the same ability as mew`);\n  //     });\n  //   });\n  // };\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}